[{"/app/src/index.tsx":"1","/app/src/reportWebVitals.ts":"2","/app/src/App.tsx":"3","/app/src/services/api.ts":"4","/app/src/services/apiStatus.ts":"5"},{"size":500,"mtime":1608356135654,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608356135654,"results":"8","hashOfConfig":"7"},{"size":6342,"mtime":1608480502843,"results":"9","hashOfConfig":"7"},{"size":194,"mtime":1608449130302,"results":"10","hashOfConfig":"7"},{"size":127,"mtime":1608463630798,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xpq7yn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/app/src/index.tsx",[],["25","26"],"/app/src/reportWebVitals.ts",[],"/app/src/App.tsx",["27"],"import React, {FormEvent, useCallback, useState, useEffect} from 'react';\nimport {Form, Button, Col, Container, Row, Table, ListGroup, InputGroup, FormControl} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {toast, ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport swal from 'sweetalert';\nimport api from \"./services/api\";\nimport apiStatus from \"./services/apiStatus\";\nimport {MdDelete} from \"react-icons/md\";\nimport './App.css';\n\ninterface IList {\n    numero: string;\n    id: number;\n}\n\ninterface IStatus {\n    countRequest: number;\n    countQueries: number;\n    serverUpTime: string;\n    serverBootTime: string;\n}\n\nfunction App() {\n    const [numero, setNumero] = useState(\"\")\n    const [lists, setList] = useState<IList[]>([]);\n    const [statusList, setStatusList] = useState<IStatus>();\n\n    useEffect(() => {\n        api.get(\"/documentos\").then(response => {\n            const resp = response.data;\n            setList(resp);\n        })\n    }, [statusList]);\n\n    function getStatus() {\n        apiStatus.get(\"/status\").then(response => {\n            const resp = response.data;\n            setStatusList(resp);\n        })\n    }\n\n    useEffect(() => {\n        getStatus()\n    }, []);\n\n    const handleSubmit = useCallback(async (event: FormEvent<HTMLFormElement>) => {\n        try {\n            event.preventDefault();\n            const response = await api.post('/documentos', {\n                numero,\n            });\n\n            if (response.data) {\n                toast.success(<span>Cpf/Cnpj: {response.data.numero} <strong>Criado com sucesso!</strong> </span>);\n                setList([...lists, response.data])\n                setNumero(\"\");\n            }\n        } catch (error) {\n            toast.error(\"Verifique se seus dados estão corretos\");\n            console.log(error)\n        }\n    }, [numero]);\n\n    const deleteCpf = useCallback(async (id) => {\n        await swal({\n            title: \"CUIDADO!\",\n            text: \"Deseja remover mesmo este CPF/CNPJ?\",\n            icon: \"warning\",\n            buttons: [\"cacelar\", \"Confirmar\"],\n            dangerMode: true,\n        }).then((willDelete) => {\n            if (willDelete) {\n                api.delete(`/documentos/${id}`);\n                setList(lists.filter(list => list.id !== id));\n                toast.error(<b>CPF/CNPJ CANCELADO</b>);\n            } else {\n                swal(\"Acção cancelada\");\n            }\n        });\n    }, [lists]);\n\n    return (\n        <>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            <Container>\n                <Row>\n                    <Col sm={12}>\n                        <ListGroup horizontal={'sm'}>\n                            <ListGroup.Item>\n                              <strong> Queries: </strong>{statusList?.countQueries}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                            <strong> Boottime: </strong> {statusList?.serverBootTime}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                            <strong> Uptime: </strong> {statusList?.serverUpTime}\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm>\n                        <Form className=\"align-items-center\" onSubmit={handleSubmit}>\n                                <Form.Row className=\"align-items-center\">\n                                    <Col xs=\"auto\">\n                                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n                                            DOCUMENTO\n                                        </Form.Label>\n                                        <InputGroup className=\"mb-2\">\n                                            <FormControl placeholder=\"Digite o seu CPF ou CNPJ\"\n                                                         value={numero}\n                                                         onChange={event => setNumero(event.target.value)} name=\"numero\"\n                                                         type=\"text\"/>\n                                        </InputGroup>\n                                    </Col>\n                                    <Col xs=\"auto\">\n                                        <Button type=\"submit\" className=\"mb-2\">\n                                            Cadastrar\n                                        </Button>\n                                    </Col>\n                                </Form.Row>\n                            </Form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                            <tr>\n                                <th>CPF/CNPJ</th>\n                                <th>Ações</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n\n                            {lists.map(list => {\n                                    return (\n                                        <tr key={list.id}>\n                                            <td className=\"align-middle\" align={\"left\"}>{list.numero} </td>\n                                            <td align={\"left\"}>\n                                                <Button variant=\"danger\" onClick={\n                                                    () => deleteCpf(list.id)\n                                                }><MdDelete/></Button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                            )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n","/app/src/services/api.ts",[],["28","29"],"/app/src/services/apiStatus.ts",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":63,"column":8,"nodeType":"36","endLine":63,"endColumn":16,"suggestions":"37"},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'lists'. Either include it or remove the dependency array. You can also do a functional update 'setList(l => ...)' if you only need 'lists' in the 'setList' call.","ArrayExpression",["42"],["40"],["41"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [lists, numero]",{"range":"45","text":"46"},[1888,1896],"[lists, numero]"]